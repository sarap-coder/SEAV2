;; Auto-generated. Do not edit!


(when (boundp 'pal_waypoint_msgs::DoWaypointNavigationGoal)
  (if (not (find-package "PAL_WAYPOINT_MSGS"))
    (make-package "PAL_WAYPOINT_MSGS"))
  (shadow 'DoWaypointNavigationGoal (find-package "PAL_WAYPOINT_MSGS")))
(unless (find-package "PAL_WAYPOINT_MSGS::DOWAYPOINTNAVIGATIONGOAL")
  (make-package "PAL_WAYPOINT_MSGS::DOWAYPOINTNAVIGATIONGOAL"))

(in-package "ROS")
;;//! \htmlinclude DoWaypointNavigationGoal.msg.html


(defclass pal_waypoint_msgs::DoWaypointNavigationGoal
  :super ros::object
  :slots (_group _first_wp _num_wp _continue_on_error ))

(defmethod pal_waypoint_msgs::DoWaypointNavigationGoal
  (:init
   (&key
    ((:group __group) "")
    ((:first_wp __first_wp) 0)
    ((:num_wp __num_wp) 0)
    ((:continue_on_error __continue_on_error) nil)
    )
   (send-super :init)
   (setq _group (string __group))
   (setq _first_wp (round __first_wp))
   (setq _num_wp (round __num_wp))
   (setq _continue_on_error __continue_on_error)
   self)
  (:group
   (&optional __group)
   (if __group (setq _group __group)) _group)
  (:first_wp
   (&optional __first_wp)
   (if __first_wp (setq _first_wp __first_wp)) _first_wp)
  (:num_wp
   (&optional __num_wp)
   (if __num_wp (setq _num_wp __num_wp)) _num_wp)
  (:continue_on_error
   (&optional (__continue_on_error :null))
   (if (not (eq __continue_on_error :null)) (setq _continue_on_error __continue_on_error)) _continue_on_error)
  (:serialization-length
   ()
   (+
    ;; string _group
    4 (length _group)
    ;; uint32 _first_wp
    4
    ;; int32 _num_wp
    4
    ;; bool _continue_on_error
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _group
       (write-long (length _group) s) (princ _group s)
     ;; uint32 _first_wp
       (write-long _first_wp s)
     ;; int32 _num_wp
       (write-long _num_wp s)
     ;; bool _continue_on_error
       (if _continue_on_error (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _group
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _group (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; uint32 _first_wp
     (setq _first_wp (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _num_wp
     (setq _num_wp (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; bool _continue_on_error
     (setq _continue_on_error (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get pal_waypoint_msgs::DoWaypointNavigationGoal :md5sum-) "61b2209700297362573013f901409437")
(setf (get pal_waypoint_msgs::DoWaypointNavigationGoal :datatype-) "pal_waypoint_msgs/DoWaypointNavigationGoal")
(setf (get pal_waypoint_msgs::DoWaypointNavigationGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Group of the waypoints
string group

# Start navigation from first_wp
uint32 first_wp

# Number of waypoints to visit, 0 means all 
int32 num_wp

#If a point in the waypoint group fails, ignore and continue to next one
bool continue_on_error

")



(provide :pal_waypoint_msgs/DoWaypointNavigationGoal "61b2209700297362573013f901409437")


